/*Program to insert and inorder traversal on binary search tree */
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
struct node
{
int key;
struct node *left, *right;
};
struct node *newNode(int item)
{
struct node *temp = (struct node *)malloc(sizeof(struct node));
temp-&gt;key = item;
temp-&gt;left = temp-&gt;right = NULL;
return temp;
}
void inorder(struct node *root)
{
if (root != NULL)
{
inorder(root-&gt;left);
Printf(“%d \n”, root-&gt;key);
inorder(root-&gt;right);
}
}
struct node* insert(struct node* node, int key)
{
if (node == NULL) return newNode(key);
if (key &lt; node-&gt;key)
node-&gt;left = insert(node-&gt;left, key);

else if (key &gt; node-&gt;key)
node-&gt;right = insert(node-&gt;right, key);
return node;
}
int main()
{
struct node *root = NULL;
root = insert(root, 4);
Insert(root, 13);
Insert(root, 52);
Insert(root, 44);
Insert(root, 38);
Insert(root, 99);
Insert(root, 6);
Inorder(root);
return 0;
}
