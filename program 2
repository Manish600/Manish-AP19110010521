/*Program to insert and inorder traversal on binary search tree */
#include<stdio.h>
#include<stdlib.h>
struct node
{
int key;
struct node *left, *right;
};
struct node *newNode(int item)
{
struct node *temp = (struct node *)malloc(sizeof(struct node));
temp->key = item;
temp->left = temp->right = NULL;
return temp;
}
void inorder(struct node *root)
{
if (root != NULL)
{
inorder(root->left);
Printf(“%d \n”, root->key);
inorder(root->right);
}
}
struct node* insert(struct node* node, int key)
{
if (node == NULL) return newNode(key);
if (key < node->key)
node->left = insert(node-&gt;left, key);

else if (key &gt; node-&gt;key)
node-&gt;right = insert(node->right, key);
return node;
}
int main()
{
struct node *root = NULL;
root = insert(root, 4);
Insert(root, 13);
Insert(root, 52);
Insert(root, 44);
Insert(root, 38);
Insert(root, 99);
Insert(root, 6);
Inorder(root);
return 0;
}
